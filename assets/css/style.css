/* MEYER RESET*/
@import 'reset.css';

/* FONTS */
@import url('https://fonts.googleapis.com/css2?family=Lato&family=Oswald:wght@400;500;700&display=swap'); 

/* CONTENT LIST
   1 Elements
   2 Classes and IDs
   3 Hamburger Icon
   4 Media Queries
*/

/* 1 Elements ========================*/
:root{
    --header-bg-color:#8398af;
    --body-bg-color:#e0e5eb; 
    --main-bg-color:#fafafa;
    --heading-color:#080f26; 
    --main-text-color:#696969;
    /* Custom properties were used to define the colours that were reused throughout the document. I only had to adjust the custom property, rather than having to search and replace each color individually throughout the document. The custom properties were defined in the :root psuedo class selector rather than the <html> element because its specificity is higher.*/
}

body{
    font-family: 'Lato', sans-serif; 
    font-size: 16px;
    line-height: 1.5;
    background-color: var(--body-bg-color);
    color: var(--main-text-color);
    /* The line-height property is set as a unitless value, 1.5, in the <body> element to prevent unexpected results due to inheritance. The unitless value is multiplied by each element's own font size. It also ensures that the line height will scale proportionately, if a user zooms in on a page to increase the text size.*/
}   

h1, h2, h3{
    font-family: 'Oswald', sans-serif; 
    margin: 1.25rem 0 1.25rem 0; 
}

h1{    
    font-size: 2.25rem; 
    font-weight: 700;
    letter-spacing: 0.125rem; 
    text-transform: uppercase;
    display: inline-block;
    padding: 0.25rem 3.125rem; 
    color: var(--heading-color);  
}

h2{
    font-size: 1.5rem; 
    font-weight: 500;
    text-transform: none;
    text-align: center;
}

h3{
    font-size: 1.375rem; 
    font-weight: 400;
    text-transform: none;
    margin: 0 6.5rem 1.25rem 6.5rem;
}

header{
    background-color: var(--header-bg-color);
    position: sticky;
    top: 0;
    width: 100%;
    box-shadow: 0.25rem 0 0.25rem 0.25rem;
    /* The position property is used to create a sticky header. The box-shadow property is used to cast a drop shadow on the <header> element, to create greater contrast between the sticky <header> element and the <main> element.*/
} 

nav{
    font-family: 'Oswald', sans-serif; 
    font-size: 1.5rem; 
    font-weight: 500;
    letter-spacing: 0.125rem;
    color: var(--heading-color);
    text-transform: capitalize;    
}

    nav ul{
        padding: 2.5rem 1.875rem 0 1.875rem;
    }

    nav ul li{
        display: inline-block;
        margin-right: 1.25rem;
    }

    /* Current Page*/
    nav ul li a.currentpage{
        background-color: var(--body-bg-color);
        text-decoration: none;
        border-radius: 3px;
        /*The link corresponding with the current page that the user is viewing will have a different background colour, compared to the <header> element. The use of a different background colour provides feedback to the user, highlighting the user's current position on my website*/
    }

    
/* Links */
a{
    color: inherit;
    text-decoration: none;
}

    /* Mouse over link */
    a:hover{
        background-color: var(--body-bg-color);
        border-radius: 3px;
        cursor: pointer;
        /*When a user hovers over a link, the cursor will turn into a pointer and the background colour of the link will change, providing the user with visual feedback. The visual feedback indicates to the user that the link can be cllicked on.*/
    }

    /* Visited link */
    a:visited{
        text-decoration: none;
    }

main{
    background-color: var(--main-bg-color);
    max-width: 960px;
    margin: 3.125rem auto; 
    overflow: auto;
    border-radius: 6px;
    /* The border-radius property is used to give the <main> element and <img> elements rounded borders.*/
}

p{
    font-size: 1.125rem; 
    margin: 0 6.5rem 1.25rem 6.5rem;
}

    p ~ ul{
        margin: 0 6.5rem 1.25rem 6.5rem;
        font-size: 1.125rem;
        /* The selector, p ~ ul, is used because it selects every <ul> element that is preceded by a <p> element. Using this selector, rather than ul li, allows me to style the <ul> elements in <p> elements differently from the nav ul.*/
    }

footer{
    font-family: 'Oswald', sans-serif; 
    font-size: 1.125rem;
    text-align: center;
    background-color: var(--header-bg-color);
    color: var(--heading-color);
    padding: 1.25rem; 
    }

    footer p{
    margin-bottom: 0rem;
    }

 img{
    max-width: 100%;
    border-radius: 6px;
    border: solid;
    border-width: 0.25rem;
    border-color: var(--main-text-color);
 }

/* 2 Classes and IDs ========================*/
#architect-img-redisplay{
    display: none;
}

.dot-point{
        list-style-type: disc;
        list-style-position: inside;
    }

.full-width-wrapper{
    max-width: 100%;
}

.wrapper {
    margin: 0 auto;
    padding: 2rem 2rem;
}

.flex-index{
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
}

    .flex-index h2{
        width: 100%;
    }

.flex-header{
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;
    }

.right-img,
.left-img{
    max-width: 40%;
    margin: 1.25rem;
}

.right-text,
.left-text
{
    max-width: 50%;
    align-self: center;
    margin: 0 0;
} 

.centre{
    margin-right: auto;
    margin-left: auto;
    margin-top: 3rem;
    margin-bottom: 1rem;
    display: block;
    width: 75%;
    max-height: 30rem;
    overflow: hidden;
}

.flex-gallery{
    display: flex;
    flex-wrap: wrap;
}

    .flex-gallery > li{
        max-width: 30%;
        flex-grow: 1;
        padding: 0.75rem 0.5rem;
        margin: 0 auto;
    }

    .flex-gallery>li:nth-child(4){
        display: none;
    }
    

    .flex-gallery img{
        max-height: 100%;
        min-width: 100%;
        object-fit: cover;
    }

   #index-image-redisplay{
       display: none;
   }
    
/* 3 Hamburger Icon ==========================*/
    /* Hamburger Menu - https://code-boxx.com/simple-responsive-pure-css-hamburger-menu/ */

/* [ON BIG SCREEN] */
/* Wrapper */
#hamnav {
    background: var(--header-bg-color);
  }
  
  /* Hide Hamburger */
  #hamnav label, 
  #hamburger { 
      display: none; 
      margin: 1.25rem 2rem 1.25rem 2rem;
    }
  
  /* Horizontal Menu Items */
  #hamitems { 
      display: flex; 
      justify-content: flex-end;
    }

  #hamitems a {
    width: 20%; 
    padding: 10px;
    color: var(--heading-color);
    text-decoration: none;
    text-align: center;
  }
  #hamitems a:hover {
    background-color: var(--body-bg-color);
  }
  
  /* [ON SMALL SCREENS] */
  @media screen and (max-width: 960px){
    /* Show Hamburger Icon */
    #hamnav label { 
      background-color: var(--heading-color); 
      color: var(--body-bg-color);
      display: inline-block;
      font-style: normal;
      font-size: 1.2em;
      padding: 10px;
    }
  
    /* Break down menu items into vertical */
    #hamitems a {
      box-sizing: border-box;
      display: block;
      width: 100%;
      border-top: 1px solid #333;
    }
  
    /* Toggle Show/Hide Menu */
    #hamitems { 
        display: none; 
    }

    #hamnav input:checked ~ #hamitems {
         display: block; 
        }
    }
    nav ul li{
        display: unset;
    }
/* 4 Media Queries ==========================*/

@media screen and (max-width:1200px){
    body{
    background-color: var(--main-bg-color);
    }
}

@media screen and (max-width:960px){
    .centre{
        max-height: unset;
    }

    .flex-index>img{
        margin: 1.5rem auto;
        display: block;
        width: 70%;
        overflow: hidden;
    }
}

@media screen and (max-width:900px){ 
    .flex-gallery>li{
        max-width: 45%;
    }
    .flex-gallery>li:nth-child(2n){
        display: none;
    }

    .flex-index{
        flex-direction: column;
    } 
    
    #hamitems a{
        padding: unset;
    }

    #index-image{
          display: none;
    }

    #index-image-redisplay{
        display: unset;
    }

    nav{
        font-size: 1.375rem;
    }

        nav ul{
            padding: 0 1rem 0 1rem;
        } 

    h2{
        padding: unset;
    }
    
    h3{
        padding: 0 2rem;
        margin: 0 1rem;
    }

    p, 
    p ~ ul{
        padding: 1rem 2rem;
        margin: 0 1rem;
    } 

    .right-img,
    .left-img{
    max-width: 100%;
    margin: unset;
    }

    .right-text,
    .left-text{
    max-width: 100%;
    align-self: unset;
    padding: 1rem 2rem;
    margin: 0 1rem;
    }
} 

@media screen and (max-width: 768px){ 
    #architect-img-redisplay{
        display: unset;
        margin: 0 auto;
    }
    
    .flex-gallery>li{
        max-width: 100%;}
        
        .flex-gallery>li:nth-child(3n){
            display: none;
        }

        .flex-gallery>li:nth-child(4n){
            display: unset;
        }

    .full-width-wrapper>p{
    font-size: 1rem;
    margin: 0 auto;
    }

    #gallery-img{
        display: none;
    }

    h1{
        font-size: 1.875rem;
    }

    h2{
        font-size: 1.25rem;
        margin: 1rem 0;
    }
   
    h3{
        font-size: 1.125rem;
        padding: 0 1.5rem;
        margin: 0 1rem;
    }
    
    nav{
        font-size: 1.25rem;
    }

    p, 
    p ~ ul,
    p.right-text, 
    p.left-text{
        font-size: 1rem;
        padding: 1rem 1.5rem;
        margin: 0 1rem;
    }      
}

@media screen and (max-width: 600px){ 
    .full-width-wrapper>p{
        font-size: 0.875rem;
        padding: unset;
        }

    h1{
        font-size: 1.5rem;
        padding: 0.5rem;
        margin: 1rem 0 0.85rem 0.5rem;
    }
    
    h2{
        font-size: 1rem;
        padding: unset;
        margin: 1rem 0 0.5rem 0;
    } 

    h3{
        font-size: 0.875rem;
        padding: 0.5rem 0 0 0;
        margin: unset;
    }

    nav{
        font-size: 1rem;
    }

    #hamnav label{
        margin: 1rem 1rem 1rem 0;
    }

    p, 
    p ~ ul,
    p.right-text, 
    p.left-text{
        font-size: 0.875rem;
        padding: 1rem 0;
        margin:unset;
    }   

    .wrapper{
        padding: 1rem;
    }
}


@media screen and (max-width: 300px){ 
    .flex-gallery>li{
        max-width: 100%;
    }

    .flex-index>img,
    img, 
    .centre{
        margin: 0.5rem auto;
    }

    h1{
        font-size: 1.125rem;
        padding: 0.5rem 0 0 0;
        margin: 1rem 0 0 0.5rem;
    }

    h2, 
    h3{
        margin-bottom: 0;
    }

    nav{
        font-size: 0.875rem;
    }

    #hamnav label{
        margin: 0.5rem 0.5rem 0.5rem 0;
    }

    p, 
    p ~ ul,
    p.right-text, 
    p.left-text{
        padding: 0.5rem 0;
    }  

    .wrapper{
        padding: 0 1rem;
    }
}

@media screen and (max-width: 250px){
    .wrapper{
        padding: 0 0.5rem;
    }
}